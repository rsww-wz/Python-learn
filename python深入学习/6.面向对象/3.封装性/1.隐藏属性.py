"""
1. 面向对象三大特性
    封装性
    继承性
    多态性

2. 封装性
    封装性是三大特性中最重要的特性
    封装性其实就是前面所讲的"整合"

3. 将封装的属性进行隐藏操作
    在属性前面加__，就可以实现隐藏的效果
    无论是变量还是函数都可以通过在前面加__,来设置隐藏属性的效果

    如果是实例变量要隐藏的话，是在self后面加上双下划线

    通过查看命名空间，可以找到隐藏属性后的属性名
        隐藏后的属性名：_类名__属性名
        这个变形是在类定义的时候就执行的

        这样的隐藏只是通过给变量换了一个名字而已，只是语法意义上的隐藏
        并没有真正意义的隐藏

4. 类的内部如何使用隐藏属性
    隐藏的属性是对外不对内
    即在类的内部可以直接使用__属性名来访问属性
    但是在类的外部就不同访问了

5. 隐藏的原理
    在定义的时候还没有运行，所以只是相当于起了一个奇怪的名字而已
    但是当类执行的时候，python底层对这种格式的命名进行统一的替换
    所以在类的内部可以使用，在类的外部就不能使用了

    这种变形只在检查语法的时候执行一次，后定义的__开头的属性都不会隐藏

"""

class Foo:
    __count = 0

    def __f1(self):
        print('hello world')


obj1 = Foo()

# 隐藏的属性不能通过访问隐藏的名字得到结果
# print(obj1.__count)

# 查看命名空间
print(Foo.__dict__)

# 通过查找访问隐藏后的属性
print(Foo._Foo__count)

# 不能通过添加__开头的属性作为隐藏属性
obj1.__name = 'rs'

# 可以访问后面添加__开头的属性
print(obj1.__name)