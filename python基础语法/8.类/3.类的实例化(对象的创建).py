"""
实例化对象(对象的外部操作)
    由类创建对象的过程就是类的实例化

    实例化只是创建类一个对象，并没有让这个对象动起来，如果要让对象动起来，需要
        调用方法，用方法做自己的行为

    如何实例化一个对象
        给对象起个名字，说明这个对象是那个类的实例化，并且说明给类变量一个具体值(属性值)
        对象名=类名（属性值）

    对象如何调用(访问)一个实例方法和实例变量
        这个和平时调用字符串，列表的方法一样
        访问方法：接收返回值的变量 = 对象名.方法(参数)
        访问变量：对象名+点+实例变量名

    在类的外部最好不要操作类，但是还是可以操作的
        访问类变量：类名+点+类变量名
        访问类方法：对象名+点+类方法名()——用一个对象调用一个类的方法，最好不要这么干

    
实例化对象的属性和方法(对象的内部操作)

实例化对象的属性(__init__方法)

    构造函数
        构造函数的定义：def __init__(self,属性)：
        这个属性是对象实例化传进来的，所以构造函数有的属性，实例化对象时必须给参数
        构造函数是自动进行的，实例化对象时，会自动调用构造函数

    实例化属性的理解
        创建实例变量，并且初始化这个实例变量
        在实例化的时候，调用了构造函数，创建了实例变量
            然后对象的参数就保存到了实例变量里面

    构造函数的形参
        构造函数的形参接收的是对象传进来的实参(属性)
        形参可以是没有定义过的类变量，对象自己的属性
        形参是对象的属性，不是类的属性

    构造函数实例化属性的语法
        self.属性 = 属性
        左边的属性是实例变量
        右边的属性是形参（形参接收实参传给实例变量）

        如果在构造函数中直接用变量，调用的是构造函数的形参，也就是对象传进来的实参

实例化对象的方法
    对象的方法其实就是针对每个对象的属性设置的函数

    实例方法的操作
        定义：def 方法名(self,属性):
        操作对象的东西都需要带self
        调用实例变量：self.实例属性
        调用实例方法：self.实例方法


        实例方法里面最好也不要操作类的属性和方法，但是还是可以操作的
        调用类变量：类名.类变量名
        调用类方法：类名.类方法名

self的理解
    self不是关键词
    无论是操作实例变量还是实例方法，只有操作了他们都要带self
    这个self就代表类调用这个实例变量或者实例方法的对象
    因为一个类可以创建多个对象，每个对象都具有这些属性，如何区别这些对象？方法就是
        每个对象都有一个身份(地址)，用一个self，就代表对象的身份，调用这些方法的
        对象会自动把对象的身份传给self，这样就可以区别不同的对象，所以在操作实例
        变量或者实例方法的时候，必须带上self，以分辨是那个对象操作了这个实例变量
        或者实例方法

区分
    类变量
    实例变量
    调用方法时的参数

    首先和类变量没有什么关系
    实例变量是实例化对象时的属性，是实例变量的初始值
    调用方法时的参数，是在实例变量的初始值上的操作

    在构造函数中，直接使用实例变量，这个实例变量表示实例化时的初始值
    在实例方法中，直接使用实例变量，这个实例变量表示调用这个方法传进来的参数


类变量和类方法的操作

    类变量就是在类里面定义的普通变量

    类变量
        类和对象都可以访问
        对象只能访问不能修改，类方法和静态方法可以修改

    类方法
        类方法作用：专门处理类变量的方法

        定义：
        @classmethod
        def name(cls,类变量)

        访问类变量：cls.类变量

        注意：类方法不能访问实例变量

        这个cls和self的作用类似，都是代表调用它的那个类(类可以继承，不一定调用的是本地类)

    静态方法
        静态方法作用：在类中没什么作用，就是普通的函数
        而且在类中不建议使用静态方法，因为静态方法和类本身没有什么关系
        静态方法不能访问类和实例的任何属性或者方法
        反之静态方法就是和类或者对象没有关系的普通函数
        唯一的关系，就是对象和类都可以调用静态方法

        定义：
        @staticmethod
        def name(变量)


类的内部操作
    类的操作就是类变量和类方法的操作，这两个都不能访问和调用对象(实例)的东西

    类方法访问类变量：cls.类变量
    类方法访问别的类方法和静态方法：cls.类方法


"""