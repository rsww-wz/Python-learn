"""
    局部作用域：在被调用函数内部的变量，处于该函数的局部作用域
    全局作用域：在所以函数之外赋值的变量，属于全局作用域
    
    一个变量必是其中局部变量或者全局变量

    不同的局部作用域是相互独立的，只能在自己的作用域中使用
    他们可以有相同的名字，但是他们不是同一个变量

    全局作用域中不能使用局部变量
    局部作用域可以访问全局变量

    global语句
    如果需要在一个函数内修改全局变量，就使用global语句
    如果不使用global语句，对全局变量操作
        如果用在赋值语句上，会创建一个和全局变量同名的局部变量，离开函数后销毁
        如果没有用在赋值语句上，又不和全局变量同名，会因为没有定义而报错

    如果使用global语句修改全局变量
    需要在函数内再次定义一遍全局变量，使用global关键字(相等于声明)

"""


def spam():
    global eggs  # 用global语句声明全局变量
    eggs = 'spam'


eggs = 'global'  # 先定义了一个全局变量
spam()  # 用函数修改了全局变量
print(eggs)


def temper():
    spam = 'world'  # 创建一个spam的局部变量，函数结束后销毁变量


spam = 'hello'  # 全局变量
temper()
print(spam)  # 打印的还是全局变量

"""
def hello():
    a = 10           局部变量

hello()
print(a)             全局作用域使用局部变量，报错

"""


def spam1():
    global egg
    egg = 'spam'  # 全局变量：函数中有global语句声明变量


def bacon():
    egg = 'bacon'  # 局部变量：函数中的赋值语句


def ham():
    print(egg)  # 全局变量：函数内没有使用在赋值语句中的变量


egg = 42  # 全局变量：函数外面的变量
spam1()
print(egg)

"""
如何判断一个变量是什么变量
    使用在函数外的变量是全局变量
    使用在函数内的变量，有global语句声明的是全局变量
    使用在函数内的变量，没有用在赋值语句中的是全局变量
    使用在函数内的变量，使用在赋值语句中的变量是局部变量

总结：除了用在函数内，而且用在赋值语句的变量是局部变量，其他都是全局变量
"""
